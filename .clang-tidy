# https://clang.llvm.org/extra/clang-tidy/checks/list.html
#
# readability-magic-numbers - https://clang.llvm.org/extra/clang-tidy/checks/readability-magic-numbers.html
#
# readability-braces-around-statements[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html
#
# readability-misleading-indentation - https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html
#
# readability-const-return-type[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-const-return-type.html
#
# readability-deleted-default[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-deleted-default.html
#
# readability-identifier-naming[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html#readability-identifier-naming
#
# readability-implicit-bool-conversion[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-implicit-bool-conversion.html
#
# readability-inconsistent-declaration-parameter-name[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-inconsistent-declaration-parameter-name.html
#
# readability-isolate-declaration[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-isolate-declaration.html
#
# readability-magic-numbers - https://clang.llvm.org/extra/clang-tidy/checks/readability-magic-numbers.html
#
# readability-misplaced-array-index[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html
#
# readability-non-const-parameter - https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html
#
# readability-redundant-*
#
# readability-simplify-boolean-expr - https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html
#
# readability-static-accessed-through-instance[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html
#
# readability-static-definition-in-anonymous-namespace - https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html
#
# readability-string-compare - https://clang.llvm.org/extra/clang-tidy/checks/readability-string-compare.html
#
# readability-uniqueptr-delete-release[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html
#
# readability-avoid-const-params-in-decls[as error] - https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html
#
# bugprone-bool-pointer-implicit-conversion[as error] - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-bool-pointer-implicit-conversion.html
#
# bugprone-copy-constructor-init - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-copy-constructor-init.html
#
# bugprone-exception-escape[as error] - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-exception-escape.html
#
# bugprone-fold-init-type - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-fold-init-type.html
#
# bugprone-forwarding-reference-overload - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-forwarding-reference-overload.html
#
# bugprone-inaccurate-erase - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-inaccurate-erase.html
#
# bugprone-incorrect-roundings - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-incorrect-roundings.html
#
# bugprone-integer-division - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-integer-division.html
#
# bugprone-misplaced-widening-cast - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-misplaced-widening-cast.html
#
# bugprone-move-forwarding-reference - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-move-forwarding-reference.html
#
# bugprone-parent-virtual-call - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-parent-virtual-call.html
#
# bugprone-sizeof-container - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-sizeof-container.html
#
# bugprone-sizeof-expression - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-sizeof-expression.html
#
# bugprone-string-constructor - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-string-constructor.html
#
# bugprone-string-integer-assignment - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-string-integer-assignment.html
#
# bugprone-string-literal-with-embedded-nul - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-string-literal-with-embedded-nul.html
#
# bugprone-suspicious-enum-usage - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-suspicious-enum-usage.html
#
# bugprone-suspicious-memset-usage - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-suspicious-memset-usage.html
#
# bugprone-suspicious-semicolon - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-suspicious-semicolon.html
#
# bugprone-terminating-continue - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-terminating-continue.html
#
# bugprone-throw-keyword-missing - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-throw-keyword-missing.html
#
# bugprone-too-small-loop-variable - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-too-small-loop-variable.html
#
# bugprone-undelegated-constructor - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-undelegated-constructor.html
#
# bugprone-unused-return-value - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-unused-return-value.html
#
# bugprone-use-after-move[as error] - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-use-after-move.html
#
# bugprone-virtual-near-miss - https://clang.llvm.org/extra/clang-tidy/checks/bugprone-virtual-near-miss.html
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

Checks: 'readability-magic-numbers,readability-braces-around-statements,readability-misleading-indentation,readability-const-return-type,readability-deleted-default,readability-identifier-naming,readability-implicit-bool-conversion,readability-inconsistent-declaration-parameter-name,readability-isolate-declaration,readability-magic-numbers,readability-misplaced-array-index,readability-non-const-parameter,readability-redundant-*,readability-simplify-boolean-expr,readability-static-accessed-through-instance,readability-static-definition-in-anonymous-namespace,readability-string-compare,readability-uniqueptr-delete-release,readability-avoid-const-params-in-decls,bugprone-bool-pointer-implicit-conversion,bugprone-copy-constructor-init,bugprone-exception-escape,bugprone-fold-init-type,bugprone-forwarding-reference-overload,bugprone-inaccurate-erase,bugprone-incorrect-roundings,bugprone-integer-division,bugprone-misplaced-widening-cast,bugprone-move-forwarding-reference,bugprone-parent-virtual-call,bugprone-sizeof-container,bugprone-sizeof-expression,bugprone-string-constructor,bugprone-string-integer-assignment,bugprone-string-literal-with-embedded-nul,bugprone-suspicious-enum-usage,bugprone-suspicious-memset-usage,bugprone-suspicious-semicolon,bugprone-terminating-continue,bugprone-throw-keyword-missing,bugprone-too-small-loop-variable,bugprone-undelegated-constructor,bugprone-unused-return-value,bugprone-use-after-move,bugprone-virtual-near-miss'

#Checks: 'readability-magic-numbers,readability-braces-around-statements,clang-diagnostic-unused-parameter,readability-identifier-naming,google-readability-casting,misc-unused-*,clang-diagnostic-absolute-value,hicpp-exception-baseclass,hicpp-use-equals-default,readability-container-size-empty,eadability-inconsistent-declaration-parameter-name,modernize-deprecated-headers,google-readability-todo,google-readability-todo,readability-else-after-return,hicpp-use-auto,modernize-use-auto,clang-analyzer-security.FloatLoopCounte,cppcoreguidelines-pro-type-member-init'
#WarningsAsErrors: 'readability-braces-around-statements,clang-diagnostic-unused-parameter,readability-identifier-naming,google-readability-casting,misc-unused-*,clang-diagnostic-absolute-value,hicpp-exception-baseclass,hicpp-use-equals-default,readability-container-size-empty,eadability-inconsistent-declaration-parameter-name,modernize-deprecated-headers'
#HeaderFilterRegex: '.*'
AnalyzeTemporaryDtors: false
FormatStyle: file
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,       value: camelBack }
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase }
  - { key: readability-identifier-naming.FunctionCase,        value: camelBack }
  - { key: readability-identifier-naming.VariableCase,        value: camelBack }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.ClassConstantCase,   value: UPPER_CASE }
  - { key: readability-identifier-naming.LocalConstantCase,   value: camelBack }
  - { key: readability-identifier-naming.TypeTemplateParameterSuffix, value: "T" }
  - { key: readability-identifier-naming.ClassMemberCase,     value: camelBack }
  - { key: readability-identifier-naming.ClassMemberPrefix,   value: "_" }
  - { key: readability-identifier-naming.PublicMethodPrefix,  value: "" }
  - { key: readability-identifier-naming.MethodCase,          value: camelBack }
  - { key: readability-identifier-naming.ProtectedMethodCase, value: aNy_CasE } # потому что перегрузка методов из Qt
  - { key: readability-identifier-naming.EnumCase,            value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.ParameterCase,       value: camelBack }
